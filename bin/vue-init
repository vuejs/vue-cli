#!/usr/bin/env node

var download = require('download-git-repo')
var program = require('commander')
var exists = require('fs').existsSync
var path = require('path')
var rm = require('rimraf').sync
var uid = require('uid')
var chalk = require('chalk')
var inquirer = require('inquirer')
var logger = require('../lib/logger')
var Spinner = require('../lib/spinner')

/**
 * Usage.
 */

program
  .usage('<template-name> [project-name]')
  .option('-c, --clone', 'use git clone')

/**
 * Help.
 */

program.on('--help', function () {
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # create a new project with an official template'))
  console.log('    $ vue init webpack my-project')
  console.log()
  console.log(chalk.gray('    # create a new project straight from a github template'))
  console.log('    $ vue init username/repo my-project')
  console.log()
})

/**
 * Help.
 */

function help () {
  program.parse(process.argv)
  if (program.args.length < 1) return program.help()
}
help()

/**
 * Padding.
 */

console.log()
process.on('exit', function () {
  console.log()
})

/**
 * Settings.
 */

var template = program.args[0]
var hasSlash = template.indexOf('/') > -1
var rawName = program.args[1]
var inPlace = !rawName || rawName === '.'
var name = inPlace ? path.relative('../', process.cwd()) : rawName
var to = path.resolve(rawName || '.')
var clone = program.clone || false

if (exists(to)) {
  inquirer.prompt([{
    type: 'confirm',
    message: inPlace
      ? 'Generate project in current directory?'
      : 'Target directory exists. Continue?',
    name: 'ok'
  }], function (answers) {
    if (answers.ok) {
      run()
    }
  })
} else {
  run()
}

/**
 * Check, download and generate the project.
 */

function run () {
  var options = require('../lib/options')(name)
  var prompt = require('../lib/prompt')
  var ask = require('../lib/ask')(options, prompt)
  var generate = require('../lib/generate')(ask)

  // check if template is local
  if (hasSlash && exists(template)) {
    generate(template, to, function (err) {
      if (err) logger.fatal(err)
      console.log()
      logger.success('Generated "%s".', name)
    })
  } else {
    // use official templates
    if (!hasSlash) {
      template = 'vuejs-templates/' + template
    }
    // download and generate
    var tmp = '/tmp/vue-template-' + uid()
    var spinner = new Spinner('downloading template')
    spinner.start()
    download(template, tmp, { clone: clone }, function (err) {
      spinner.stop()
      if (err) logger.fatal(err)
      generate(tmp, to, function (err) {
        if (err) logger.fatal(err)
        rm(tmp)
        console.log()
        logger.success('Generated "%s".', name)
      })
    })
  }
}
